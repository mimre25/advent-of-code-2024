defmodule EightTest do
  use ExUnit.Case
  alias AdventOfCode.Eight

  test "compute_antinode_positions" do
    assert Eight.compute_antinode_positions({4, 5}, {6, 6}) == [{2, 4}, {8, 7}]
    assert Eight.compute_antinode_positions({4, 5}, {5, 9}) == [{3, 1}, {6, 13}]
    assert Eight.compute_antinode_positions({5, 9}, {6, 6}) == [{4, 12}, {7, 3}]
  end

  test "find_antennas" do
    assert Eight.find_antennas(
             TestUtils.Input.str_to_matrix("""
             ............
             ........0...
             .....0......
             .......0....
             ....0.......
             ......A.....
             ............
             ............
             ........A...
             .........A..
             ............
             ............
             """)
           ) == %{
             "0" => [
               {2, 9},
               {3, 6},
               {4, 8},
               {5, 5}
             ],
             "A" => [
               {6, 7},
               {9, 9},
               {10, 10}
             ]
           }
  end

  test "part_one" do
    assert Eight.part_one(
             TestUtils.Input.str_to_matrix("""
             ............
             ........0...
             .....0......
             .......0....
             ....0.......
             ......A.....
             ............
             ............
             ........A...
             .........A..
             ............
             ............
             """)
           ) == 14
  end

  test "part_two_easy" do
    assert Eight.part_two(
             TestUtils.Input.str_to_matrix("""
             T.........
             ...T......
             .T........
             ..........
             ..........
             ..........
             ..........
             ..........
             ..........
             ..........
             """)
           ) == 9
  end

  test "part_two" do
    assert Eight.part_two(
             TestUtils.Input.str_to_matrix("""
             ............
             ........0...
             .....0......
             .......0....
             ....0.......
             ......A.....
             ............
             ............
             ........A...
             .........A..
             ............
             ............
             """)
           ) == 34
  end
end
